#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–µ—à–∞ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import logging
from database import get_db, init_database
from config.config_manager import ConfigManager
from sqlalchemy import text
from chat_service import ChatService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def change_user_password(username: str, new_password: str):
    """–ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        config_manager = ConfigManager()
        database_url = config_manager.get_database_url()
        init_database(database_url)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        db = next(get_db())
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–µ—à–∞ –ø–∞—Ä–æ–ª—è
        chat_service = ChatService()
        new_password_hash = chat_service.hash_password(new_password)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        result = db.execute(text("""
            UPDATE users 
            SET password_hash = :password_hash 
            WHERE username = :username AND is_ldap_user = FALSE
        """), {
            "password_hash": new_password_hash,
            "username": username
        })
        
        if result.rowcount > 0:
            db.commit()
            logger.info(f"‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω")
            logger.info(f"üîê –ù–æ–≤—ã–π —Ö–µ—à: {new_password_hash[:20]}...")
        else:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —è–≤–ª—è–µ—Ç—Å—è LDAP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: {e}")
        raise

def list_users_with_passwords():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–æ–ª—è–º–∏"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        config_manager = ConfigManager()
        database_url = config_manager.get_database_url()
        init_database(database_url)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        db = next(get_db())
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        result = db.execute(text("""
            SELECT username, password_hash, is_ldap_user, last_login
            FROM users 
            ORDER BY username
        """))
        
        users = result.fetchall()
        
        logger.info(f"üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        print("\n" + "="*80)
        print(f"{'Username':<20} {'Type':<10} {'Has Password':<12} {'Last Login':<20}")
        print("="*80)
        
        for username, password_hash, is_ldap_user, last_login in users:
            user_type = "LDAP" if is_ldap_user else "Local"
            has_password = "Yes" if password_hash else "No"
            last_login_str = str(last_login)[:19] if last_login else "Never"
            
            print(f"{username:<20} {user_type:<10} {has_password:<12} {last_login_str:<20}")
        
        print("="*80)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        raise

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python change_password_hash.py list                    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  python change_password_hash.py change <username> <password>  # –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å")
        print("\n–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python change_password_hash.py list")
        print("  python change_password_hash.py change admin newpassword123")
        sys.exit(1)
    
    command = sys.argv[1].lower()
    
    if command == "list":
        list_users_with_passwords()
    elif command == "change":
        if len(sys.argv) < 4:
            print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å")
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python change_password_hash.py change <username> <password>")
            sys.exit(1)
        
        username = sys.argv[2]
        new_password = sys.argv[3]
        
        print(f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
        change_user_password(username, new_password)
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: list, change")
        sys.exit(1)
